/* 
 *  mod_helloworld.c -- Apache sample helloworld module
 *  [Autogenerated via ``apxs -n helloworld -g'']
 *
 *  To play with this sample module first compile it into a
 *  DSO file and install it into Apache's modules directory 
 *  by running:
 *
 *    $ apxs -c -i mod_helloworld.c
 *
 *  Then activate it in Apache's httpd.conf file for instance
 *  for the URL /helloworld in as follows:
 *
 *    # httpd.conf
 *    LoadModule helloworld_module modules/mod_helloworld.so
 *    <Location /hello>
 *      SetHandler helloworld
 *    </Location>
 *
 *  Then after restarting Apache via
 *
 *    $ apachectl restart
 *
 *  you immediately can request the URL /helloworld and watch for the
 *  output of this module. This can be achieved for instance via:
 *
 *    $ lynx -mime_header http://localhost/hello
 */ 

#include "httpd.h"
#include "http_config.h"
#include "http_protocol.h"
#include "ap_config.h"

// request handler example

// request_rec Struct Reference
// http://ci.apache.org/projects/httpd/trunk/doxygen/structrequest__rec.html

static int helloworld_handler(request_rec *req)
{
    if (strcmp(req->handler, "helloworld")) {
        return DECLINED;
    }
    if (!req->header_only) {
        ap_rputs("{\"message\": \"Hello world AAA!\"}\n", req);
    }
    req->content_type = "application/json;charset=UTF-8";

    // ap_table_set is too old API
    apr_table_set(req->headers_out, "X-Content-Type-Options", "nosniff");

    return OK;
}

static void helloworld_register_hooks(apr_pool_t *p)
{
    printf("\n ** helloworld_register_hooks  **\n\n");
    ap_hook_handler(helloworld_handler, NULL, NULL, APR_HOOK_MIDDLE);
}

/* Dispatch list for API hooks */
module AP_MODULE_DECLARE_DATA helloworld_module = {
    STANDARD20_MODULE_STUFF, 
    NULL, /* create per-dir    config structures */
    NULL, /* merge  per-dir    config structures */
    NULL, /* create per-server config structures */
    NULL, /* merge  per-server config structures */
    NULL, /* table of config file commands       */
    helloworld_register_hooks  /* register hooks */
};